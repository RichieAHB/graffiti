{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"graffiti.77de5100.map","sourceRoot":"..","sourcesContent":["const G = 10;\n\nconst renderPlanet = (ctx: CanvasRenderingContext2D, scale: number) => (\n  planet: Planet\n) => {\n  const pos = planet.pos.scale(scale);\n\n  ctx.beginPath();\n  ctx.arc(\n    pos.x,\n    pos.y,\n    (Math.cbrt(planet.mass) as number) * scale,\n    0,\n    Math.PI * 2\n  );\n  ctx.fillStyle = 'black';\n  ctx.fill();\n};\n\nconst renderPhysics = (ctx: CanvasRenderingContext2D, scale: number) => (\n  planet: Planet\n) => {\n  const pos = planet.pos.scale(scale);\n  const velo = planet.velocity.scale(scale);\n  const acc = planet.acceleration.scale(scale);\n\n  ctx.lineWidth = 4;\n  ctx.lineCap = 'round';\n\n  ctx.beginPath();\n  ctx.moveTo(pos.x, pos.y);\n  const a = pos.add(acc);\n  ctx.lineTo(a.x, a.y);\n  ctx.strokeStyle = 'orange';\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.moveTo(pos.x, pos.y);\n  const v = pos.add(velo);\n  ctx.lineTo(v.x, v.y);\n  ctx.strokeStyle = 'red';\n  ctx.stroke();\n};\n\nclass SystemRenderer {\n  public scale: number;\n  private ctx: CanvasRenderingContext2D;\n\n  static create() {\n    return new SystemRenderer();\n  }\n\n  constructor(\n    readonly canvas: HTMLCanvasElement = document.createElement('canvas')\n  ) {\n    this.scale = 1;\n    this.canvas = canvas;\n    this.canvas.style.position = 'fixed';\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    this.canvas.style.width = `${window.innerWidth}px`;\n    this.canvas.style.height = `${window.innerHeight}px`;\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) throw new Error('2d canvas not available');\n    this.ctx = ctx;\n    this.ctx.translate(window.innerWidth / 2, window.innerHeight / 2);\n  }\n\n  clear() {\n    const { canvas, ctx } = this;\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n\n  render(system: System) {\n    this.clear();\n    system.planets.forEach(renderPlanet(this.ctx, this.scale));\n    system.planets.forEach(renderPhysics(this.ctx, this.scale));\n  }\n}\n\nclass System {\n  static create(planets: Planet[]) {\n    return new System(planets);\n  }\n\n  constructor(public planets: Planet[]) {\n    this.planets = planets;\n  }\n\n  public update(deltaMs: number) {\n    this.planets = this.planets.map((planet, i) =>\n      planet.update(\n        [...this.planets.slice(0, i), ...this.planets.slice(i + 1)],\n        deltaMs\n      )\n    );\n  }\n\n  toString() {\n    return this.planets.join(', ');\n  }\n}\n\nclass Planet {\n  static create(\n    x: number,\n    y: number,\n    vx: number = 0,\n    vy: number = 0,\n    mass: number = 0.00001\n  ) {\n    return new Planet(\n      Vec2.create(x, y),\n      Vec2.create(vx, vy),\n      Vec2.create(0, 0),\n      mass\n    );\n  }\n\n  constructor(\n    readonly pos: Vec2,\n    readonly velocity: Vec2,\n    readonly acceleration: Vec2, // for debugging mainly\n    readonly mass: number\n  ) {\n    this.pos = pos;\n    this.velocity = velocity;\n    this.acceleration = acceleration;\n    this.mass = mass;\n  }\n\n  private forceBetween(p: Planet) {\n    const d = this.pos.distance(p.pos);\n    return d && G * ((this.mass * p.mass) / d ** 2);\n  }\n\n  private getAccelerationDueToOthers(others: Planet[]) {\n    return others\n      .reduce(\n        (acc, other) =>\n          acc.add(\n            other.pos.subtract(this.pos).unit.scale(this.forceBetween(other))\n          ),\n        Vec2.create()\n      )\n      .scale(1 / this.mass);\n  }\n\n  public update(others: Planet[], deltaMs: number) {\n    const deltaS = deltaMs / 1000;\n    const acceleration = this.getAccelerationDueToOthers(others);\n    const velocity = acceleration.scale(deltaS).add(this.velocity);\n    const pos = velocity.scale(deltaS).add(this.pos);\n    return new Planet(pos, velocity, acceleration, this.mass);\n  }\n\n  public toString() {\n    return `[${this.pos.x}, ${this.pos.y}]`;\n  }\n}\n\nclass Vec2 {\n  static create(x: number = 0, y: number = 0) {\n    return new Vec2(x, y);\n  }\n\n  constructor(readonly x: number, readonly y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public get magnitude() {\n    const { x, y } = this;\n    return Math.sqrt(x ** 2 + y ** 2);\n  }\n\n  public get unit() {\n    // if magnitude is 0 then it means x and y are 0 so we can scalar to any num\n    const magnitude = this.magnitude || 1;\n    return Vec2.create(this.x / magnitude, this.y / magnitude);\n  }\n\n  public scale(s: number) {\n    return Vec2.create(this.x * s, this.y * s);\n  }\n\n  public add(v: Vec2) {\n    return Vec2.create(this.x + v.x, this.y + v.y);\n  }\n\n  public subtract(v: Vec2) {\n    return Vec2.create(this.x - v.x, this.y - v.y);\n  }\n\n  public distance(v: Vec2) {\n    return v.subtract(this).magnitude;\n  }\n}\n\nconst system = System.create([\n  Planet.create(-51, 50, 50, 50, 40000),\n  Planet.create(50, -50, -50, -50, 40000),\n  Planet.create(-50, -51, -50, 50, 40000),\n  Planet.create(50, 50, 50, -50, 40000)\n]);\n\nlet i = 0;\n\nconst renderer = SystemRenderer.create();\n\ndocument.body.appendChild(renderer.canvas);\n\nconst run = (n = Infinity) => {\n  if (i < n) requestAnimationFrame(() => run(n));\n  i++;\n  renderer.render(system);\n  // console.log(sys.toString());\n  system.update(16);\n};\n\nrun();\n"]}